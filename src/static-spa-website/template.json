{
	"Parameters": {
		"HostedZoneName": {
			"Type": "String",
			"Description": "hosted zone name"
		},
		"DomainName": {
			"Type": "String",
			"Description": "domain name (subdomains included)"
		}
	},
	"Resources": {
		"Bucket": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"BucketName": {
					"Ref": "DomainName"
				}
			}
		},
		"BucketPolicy": {
			"Type": "AWS::S3::BucketPolicy",
			"Properties": {
				"Bucket": {
					"Ref": "Bucket"
				},
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Sid": "AddPerm",
							"Effect": "Allow",
							"Principal": {
								"AWS": {
									"Fn::Sub": "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${OriginAccessIdentity}"
								}
							},
							"Action": "s3:GetObject",
							"Resource": {
								"Fn::Sub": "arn:aws:s3:::${DomainName}/*"
							}
						}
					]
				}
			}
		},
		"OriginAccessIdentity": {
			"Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
			"Properties": {
				"CloudFrontOriginAccessIdentityConfig": {
					"Comment": {
						"Ref": "DomainName"
					}
				}
			}
		},
		"Distribution": {
			"Type": "AWS::CloudFront::Distribution",
			"DependsOn": [
				"Bucket",
				"BucketPolicy",
				"OriginAccessIdentity"
			],
			"Properties": {
				"DistributionConfig": {
					"Origins": [
						{
							"DomainName": {
								"Fn::GetAtt": ["Bucket", "RegionalDomainName"]
							},
							"Id": "S3Origin",
							"S3OriginConfig": {
								"OriginAccessIdentity": {
									"Fn::Sub": "origin-access-identity/cloudfront/${OriginAccessIdentity}"
								}
							}
						}
					],
					"Enabled": "true",
					"Comment": {
						"Ref": "DomainName"
					},
					"DefaultRootObject": "index.html",
					"Aliases": [{
						"Ref": "DomainName"
					}],
					"DefaultCacheBehavior": {
						"AllowedMethods": ["GET", "HEAD"],
						"Compress": "true",
						"TargetOriginId": "CustomOrigin",
						"ForwardedValues": {
							"QueryString": "true",
							"Cookies": {
								"Forward": "none"
							}
						},
						"ViewerProtocolPolicy": "redirect-to-https"
					},
					"PriceClass": "PriceClass_200",
					"ViewerCertificate": {
						"AcmCertificateArn": {
							"Ref": "SslCert"
						},
						"SslSupportMethod": "sni-only"
					},
					"CustomErrorResponses": [
						{
							"ErrorCachingMinTTL" : 300,
							"ErrorCode" : 403,
							"ResponseCode" : 200,
							"ResponsePagePath" : "/index.html"
						},
						{
							"ErrorCachingMinTTL" : 300,
							"ErrorCode" : 404,
							"ResponseCode" : 200,
							"ResponsePagePath" : "/index.html"
						}
					]
				}
			}
		},
		"SslCert": {
			"Type": "AWS::CertificateManager::Certificate",
			"Properties": {
				"ValidationMethod": "DNS",
				"DomainName": {
					"Ref": "DomainName"
				}
			}
		},
		"DNSRecord": {
			"Type": "AWS::Route53::RecordSetGroup",
			"Properties": {
				"HostedZoneName": {
					"Fn::Sub": "${HostedZoneName}."
				},
				"RecordSets": [{
					"Name": {
						"Ref": "DomainName"
					},
					"Type": "A",
					"AliasTarget": {
						"HostedZoneId": "Z2FDTNDATAQYW2",
						"DNSName": {
							"Fn::GetAtt": ["Distribution", "DomainName"]
						}
					}
				}]
			}
		}
	},
	"Outputs": {
		"DomainName": {
			"Description": "the domain of the website",
			"Value": {
				"Fn::Sub": "https://${DomainName}"
			}
		},
		"DistributionId": {
			"Description": "the CloudFront Distribution ID.",
			"Value": {
				"Ref": "Distribution"
			}
		},
		"SourceBucketName": {
			"Description": "Source Bucket Name",
			"Value": {
				"Ref": "Bucket"
			}
		}
	}
}
